{"version":3,"sources":["./src/app/tast-editor/tast-editor.component.ts","./src/app/tast-editor/tast-editor.component.html","./src/app/change-user-dialog/change-user-dialog.component.ts","./src/app/change-user-dialog/change-user-dialog.component.html","./src/app/new-user-dialog/new-user-dialog.component.ts","./src/app/new-user-dialog/new-user-dialog.component.html","./src/environments/environment.ts","./src/app/taskservice.service.ts","./src/app/task-list/task-list.component.ts","./src/app/task-list/task-list.component.html","./src/app/task-list/task-list.module.ts","./src/app/tast-editor/task-editor.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/new-user-dialog/new-user-dialog.module.ts","./src/app/change-user-dialog/change-user-dialog.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Task } from '../shared/task'\nimport { User } from '../shared/user';\nimport { TaskserviceService } from '../taskservice.service';\n\n@Component({\n  selector: 'app-tast-editor',\n  templateUrl: './tast-editor.component.html',\n  styleUrls: ['./tast-editor.component.scss']\n})\nexport class TastEditorComponent implements OnInit {\n\n  valueTitle = '';\n  valueTask = '';\n  myControl = new FormControl();\n  options: string[] =[];\n  filteredOptions?: Observable<string[]>;\n  taskList: Task[] = [];\n  selectedTask: Task;\n\n\n\n  constructor(private TaskService: TaskserviceService) {\n    this.selectedTask = {name: '', completed: false, color: \"warn\", subtasks: [], setDescription: false, isUrgent: false};\n   }\n\n  ngOnInit(): void {\n    this.TaskService.selectedTask.subscribe(selectedTask => this.selectedTask = selectedTask);\n    this.TaskService.updatedTaskList.subscribe(taskList => this.taskList = taskList);\n    this.TaskService.options.subscribe(options => this.options = options);\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n    this.taskList.forEach(task => {\n      this.options.push(task.name);\n\n    })\n    this.myControl.setValue(this.taskList[0]);\n  }\n\n  selectedTitlechange(changedTitle: string){\n    this.taskList.forEach(task => {\n      if(task.name == changedTitle){\n        this.TaskService.toUpdateSelectedTask(task)\n      }\n    })\n  }\n\n  addTitle(Title: string){\n    this.taskList.push({\n        name: Title,\n        completed: false,\n        color: 'primary',\n        subtasks: [],\n        setDescription: false,\n        isUrgent: false\n      })\n    this.TaskService.toUpdateTaskList(this.taskList);\n    this.options.push(Title);\n    this.myControl.setValue(Title);\n    this.valueTitle = '';\n  }\n\n  addTask(newTask: string){\n    this.selectedTask.subtasks.push(\n      {\n        name: newTask,\n        completed: false,\n        color: 'primary',\n        subtasks: [],\n        setDescription: false,\n        isUrgent: false\n      });\n      this.valueTask = '';\n    }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n","<div>\n  <mat-form-field class=\"example-form-field\">\n    <mat-label>Enter Title</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"valueTitle\">\n    <button *ngIf=\"valueTitle\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"valueTitle=''\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <button [disabled]=\"!valueTitle\" mat-button color=\"primary\" (click)=addTitle(valueTitle)>Create Title</button>\n  <br>\n\n  <mat-form-field class=\"example-form-field\">\n    <mat-label *ngIf=\"!this.myControl.value\" style=\"color: brown;\">You need to Choose</mat-label>\n    <mat-label *ngIf=\"this.myControl.value\">Enter New Task</mat-label>\n    <input [disabled]=\"!this.myControl.value\" matInput type=\"text\" [(ngModel)]=\"valueTask\">\n    <button *ngIf=\"valueTask\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"valueTask=''\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <button [disabled]=\"!this.myControl.value\" mat-button color=\"primary\" (click)=addTask(valueTask)>Create Task</button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/user';\nimport { TaskserviceService } from '../taskservice.service';\n\n@Component({\n  selector: 'app-change-user-dialog',\n  templateUrl: './change-user-dialog.component.html',\n  styleUrls: ['./change-user-dialog.component.scss']\n})\nexport class ChangeUserDialogComponent implements OnInit {\n\n  tmpUsername: string = '';\n  userList: User[] = [];\n  selectedUser: User = {email:\"\", options:[], userTasks: []};\n\n  constructor(\n    private taskService: TaskserviceService\n  ) { }\n\n  ngOnInit(): void {\n    this.taskService.currentUser.subscribe(selectedUser => this.selectedUser = selectedUser)\n    console.log(this.selectedUser);\n  }\n\n  onChangeUser(changeUser: string){\n    localStorage.setItem('lastSelectedUser', changeUser);\n\n  }\n\n}\n","\n<div class=\"addUser\">\n  <form >\n    <h2>To Change User Please Enter User Name</h2>\n    <input matInput type=\"text\" placeholder=\"Enter User Email Hare...\" #inputName>\n    <div mat-dialog-actions>\n      <button mat-button color=\"primary\" style=\"display: flex;\"> Close </button>\n      <button mat-button color=\"primary\" style=\"display: flex;\" (click)=\"onChangeUser(inputName.value)\" cdkFocusInitial> Change </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/user';\nimport { TaskserviceService } from '../taskservice.service';\n\n@Component({\n  selector: 'app-new-user-dialog',\n  templateUrl: './new-user-dialog.component.html',\n  styleUrls: ['./new-user-dialog.component.scss']\n})\nexport class NewUserDialogComponent implements OnInit {\n\n  tmpUsername: string = '';\n  userList: User[] = [];\n  constructor(\n    private taskService: TaskserviceService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCreateUser(newUserName: string){\n    const tmpUserList = localStorage.getItem(\"userDatas\");\n    if(tmpUserList)  {\n      this.userList = JSON.parse(tmpUserList)\n    }\n    this.userList.push({email:newUserName, options:[], userTasks: []});\n    console.log(this.userList);\n    this.taskService.toUpdateUserList(this.userList);\n  }\n\n\n}\n","\n<div class=\"addUser\">\n  <form >\n    <h2>To Create a New User PleaseEnter User Name</h2>\n    <input matInput type=\"text\" placeholder=\"Enter New User Email Hare...\" #inputName>\n    <div mat-dialog-actions>\n      <button mat-button color=\"primary\" style=\"display: flex;\"> Close </button>\n      <button mat-button color=\"primary\" style=\"display: flex;\" (click)=\"onCreateUser(inputName.value)\" cdkFocusInitial> Create User </button>\n    </div>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Task } from './shared/task';\nimport { User } from './shared/user';\nimport {FormControl} from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TaskserviceService implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(){\n\n  }\n\n  private taskListSource = new BehaviorSubject<Task[]>([])\n  private selectedTaskSource = new BehaviorSubject<Task>({name:\"No Title Selected\", completed: true, color: \"primary\", subtasks: [], setDescription: false, isUrgent: false});\n  private optionsSource =  new BehaviorSubject<string[]>([]);\n  private newProjectTaskList: string[] = [\n    'Client Contact Email' \t,\n    'Event Url (***.vii.events)'\t,\n    'Event Timline'\t,\n    'Event Contract'\t,\n    'Admin Upload date in calendar'\t,\n    'Training dates and times in  calendar'\t,\n    'Event date and time in calendar'\t,\n    'Kickoff and Pre Event Meetings schedule'\t,\n    'Landing page + form' \t,\n    'Trello with all integrations' ,\n    'Vimeo/Youtube account operational\t',\n    'Chat function operational\t',\n    'Schedule according to agenda'\t,\n    'Correct links in schedule\t',\n    'Onestream configuration' \t,\n    'Onestream Backup stream\t',\n    'OBS Backup ( files ready for streaming)\t',\n    'Link switching feature in schedule < 15 sec\t',\n    'check streaming in youtube/bamboo from ort computer and network\t',\n    'Login Provider connected in admin\t',\n    'Webhook setup '\t,\n    'Registration+Webhook login\t',\n    'Samlpe list testing\t',\n    'Landing Page connected in login page'\t,\n    'Allowed domains in admin+login check\t',\n    'Forbidden Domains in admin+ Login Check\t',\n    'Client Id Validation'\t,\n    'Chat configuration'\t,\n    'System Analytics\t',\n    'Metadata Validation '\t,\n    'Server Validation '\t,\n    'Tawk.to main connected\t',\n    'Tawk.to main title+trigger customized\t',\n    'Tawk.to Main identification\t',\n    'Tawk.to card connection+title+trigger\t',\n    'Tawk.to card identification '\t,\n    'Mixpanel admin connection\t',\n    'Mixpanel Event Check'\t,\n    'Mixpanel setup - timezone+event name\t',\n    'Google analytics connected\t',\n    'Google analytics event check '\t,\n    'Zoom connected + correct version\t',\n    'Zoom Web app Checked',\n    'All friendly names are correct\t',\n    'RTL\t',\n    'Analytics (mixpanel connection)\t',\n    'userway installed\t',\n    'Translations/custom text json sent\t',\n    'Text in platform checked '\t,\n    'buttons translated/customized\t',\n    'admin timezone set to event time \t',\n    'Menu \t',\n    'Agenda\t',\n    'Side bar - guide/rules'\t,\n    'Welcome asset'\t,\n    'All videos working'\t,\n    'All Pdf working\t',\n    'All website links working'\t,\n    'All Pictures are Compressed'\t,\n    'All pdf are compressed'\t,\n    'Notification - files + shedule'\t,\n    'zoom app links set to open in new tab'\t,\n    'event locked' \t,\n    'tawk.to training' \t,\n    'live stream training '\t,\n    'general chat training'\t,\n    'platform run through'];\n  private userList: User[] = [];\n  private currentUserSource = new BehaviorSubject<User>({email:\"\", options:[], userTasks: [{name:\"No Title Selected\", completed: true, color: \"primary\", subtasks: [], setDescription: false, isUrgent: false}] })\n  private UserListSource = new BehaviorSubject<User[]>([]);\n\n\n  updatedTaskList = this.taskListSource.asObservable();\n  selectedTask = this.selectedTaskSource.asObservable();\n  options = this.optionsSource.asObservable();\n  currentUser = this.currentUserSource.asObservable();\n  updatedUserList = this.UserListSource.asObservable();\n\n\n  toUpdateTaskList(taskList: Task[]){\n    this.taskListSource.next(taskList);\n  }\n\n  toUpdateSelectedTask(newSelecteTask: Task){\n    this.selectedTaskSource.next(newSelecteTask);\n  }\n\n  toUploadOptions(newOptions: string[]){\n    this.optionsSource.next(newOptions);\n  }\n\n  getnewProjectTaskList(): string[]{\n    return this.newProjectTaskList.splice(0);\n  }\n\n  getUserList(): User[]{\n    return this.userList.slice(0);\n  }\n  addUserToList(NewUser: User){\n    this.userList.push(NewUser);\n  }\n\n  toUpdateUserList(newUserList: User[]){\n    this.UserListSource.next(newUserList);\n    this.userList = newUserList;\n    this.savePrograss();\n  }\n\n  toChengeUser(newSelectedUser: User){\n        this.currentUserSource.next(newSelectedUser);\n        this.toUpdateTaskList(newSelectedUser.userTasks);\n\n  }\n\n  savePrograss(){\n    localStorage.setItem(\"userDatas\",JSON.stringify(this.userList));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../shared/task'\nimport { TaskserviceService } from '../taskservice.service';\nimport {ThemePalette} from '@angular/material/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit {\n\n  color: ThemePalette = 'primary';\n  checked = false;\n  disabled = false;\n\n  showAll: boolean = true;\n  showDone: boolean = false;\n  showUrgent: boolean = false;\n  showNonDone: boolean = false;\n  userList: User[] = [];\n  taskList: Task[] = [];\n  fullTaskList: Task[] = [];\n  selectedTask: Task;\n  selectedUser: User;\n  allComplete: boolean = false;\n  options: string[] = [];\n  panelOpenState = false;\n  tmpStringInput: string = '';\n  tmpList = this.TaskService.getnewProjectTaskList()\n\n  constructor(private TaskService: TaskserviceService) {\n    this.selectedUser = {email:\"\", options:[], userTasks: []};\n    this.selectedTask = this.selectedUser.userTasks[0];\n    this.TaskService.options.subscribe(options => this.options = options);\n  }\n\n  ngOnInit(): void {\n    this.TaskService.updatedTaskList.subscribe(taskList => this.taskList = taskList);\n    this.TaskService.selectedTask.subscribe(selectedTask => this.selectedTask = selectedTask);\n    this.TaskService.updatedUserList.subscribe(UserList => this.userList = UserList);\n    this.TaskService.currentUser.subscribe(selectedUser => this.selectedUser = selectedUser);\n    console.log(this.selectedUser);\n  }\n\n  selectedTitlechange(index: number){\n    this.TaskService.toUpdateSelectedTask(this.taskList[index])\n  }\n\n  newProjectTasks(){\n    if(confirm(\"Are you sure to import new project tasks list to: \" + this.selectedTask.name)) {\n      const tmpList = this.tmpList\n      this.selectedTask.projectTasksLoaded = true;\n      tmpList.forEach(subTask => {\n        this.selectedTask.subtasks.push(\n        {\n          name: subTask,\n          completed: false,\n          color: 'primary',\n          subtasks: [],\n          setDescription: false,\n          isUrgent: false\n        }\n        )\n      })\n    }\n  }\n\n  resetTitle(){\n    this.selectedTask.color = 'primary';\n    this.selectedTask.completed = false;\n    this.selectedTask.description = '';\n    this.selectedTask.isUrgent = false;\n    this.selectedTask.projectTasksLoaded = false;\n    this.selectedTask.setDescription = false;\n    this.selectedTask.subtasks = [];\n  }\n\n  onFilterChange(showAll: boolean, showDone: boolean, showUrgent: boolean, showNonDone: boolean){\n    this.showAll = showAll;\n    this.showDone = showDone;\n    this.showUrgent = showUrgent;\n    this.showNonDone = showNonDone;\n  }\n\n  deleteTitle(){\n    if(confirm(\"Are you sure to delete \" + this.selectedTask.name)) {\n      this.resetTitle();\n      this.taskList.splice(this.taskList.indexOf(this.selectedTask),1);\n      this.options.splice(this.options.indexOf(this.selectedTask.name),1);\n\n    }\n    this.TaskService.toUpdateTaskList(this.taskList);\n  }\n\n  deleteTask(index: number){\n    if(confirm(\"Are you sure to delete task \" + this.selectedTask.subtasks[index].name)) {\n      this.selectedTask.subtasks.splice(index,1);\n    }\n  }\n\n  updateAllComplete() {\n    this.allComplete = this.selectedTask.subtasks != null && this.selectedTask.subtasks.every(t => t.completed);\n  }\n\n  someComplete(): boolean {\n    if (this.selectedTask.subtasks == null) {\n      return false;\n    }\n    return this.selectedTask.subtasks.filter(t => t.completed).length > 0 && !this.allComplete;\n  }\n\n  setAll(completed: boolean) {\n    this.allComplete = completed;\n    if (this.selectedTask.subtasks == null) {\n      return;\n    }\n    this.selectedTask.subtasks.forEach(t => t.completed = completed);\n  }\n}\n","<div class=\"container\" style=\"padding: 20px 0px 0px 20px;\">\n  <p *ngIf=\"this.selectedUser.email\" style=\"font-size: 12px;\"> <span style=\"color: brown; font-size: 16px;\" >{{ this.selectedUser.email }}</span> is Logged in </p>\n  <p *ngIf=\"!this.selectedUser.email\" style=\"font-size: 12px;\">No User Was Selected</p>\n\n</div>\n\n<mat-tab-group  mat-align-tabs=\"center\" (selectedTabChange)=\"selectedTitlechange($event.index)\">\n\n  <mat-tab #index *ngFor=\"let option of options\" label={{option}}>\n    <div style=\"text-align: center;\">\n      <button mat-button color=\"warn\" style=\"font-size: small;\" (click)=\"deleteTitle()\">Delete {{ option }}</button>\n      <button (click)=\"newProjectTasks()\" mat-button color=\"primary\" style=\"font-size: small;\" [disabled]=\"this.selectedTask.projectTasksLoaded\">Load new Project Tasks</button>\n      <button mat-button color=\"primary\" style=\"font-size: small;\">Load Custom Tasks</button>\n      <br>\n      <mat-radio-group aria-label=\"Select an option\">\n        <mat-radio-button\n          checked=\"true\"\n          style=\"margin-right: 20px; font-size: small;\"\n          value=\"1\"\n          (change)=\"onFilterChange(true, false, false, false)\">\n          Show All\n        </mat-radio-button>\n\n        <mat-radio-button\n          style=\"margin-right: 20px; font-size: small;\"\n          value=\"2\"\n          (change)=\"onFilterChange(false, true, false, false)\">\n          Show Complete Tasks Only\n        </mat-radio-button>\n\n        <mat-radio-button\n          style=\"margin-right: 20px; font-size: small;\"\n          value=\"3\"\n          (change)=\"onFilterChange(false, false, false, true)\">\n          Show Open Tasks Only\n        </mat-radio-button>\n\n        <mat-radio-button\n          style=\"margin-right: 20px; font-size: small;\"\n          value=\"4\"\n          (change)=\"onFilterChange(false, false, true, false)\">\n          Show Urgent Tasks Only\n        </mat-radio-button>\n\n        </mat-radio-group>\n\n      </div>\n    <ul>\n\n      <li style=\"margin-bottom: 2px; width: 95%;\" *ngFor=\"let subtask of selectedTask.subtasks; let i = index\" >\n        <div *ngIf=\"showAll || showDone === subtask.completed\">\n        <mat-accordion>\n\n          <mat-expansion-panel\n                               [ngStyle]=\"subtask.isUrgent ? {'background-color': 'brown'} : {'background-color': 'white'}\"\n                               (opened)=\"panelOpenState = true\"\n                               (closed)=\"panelOpenState = false\">\n          <mat-expansion-panel-header>\n\n\n              <mat-panel-title *ngIf=\"subtask.completed\" style=\"color: green\">\n                {{ i+1 }} {{ subtask.name }}\n\n              </mat-panel-title>\n\n              <mat-panel-title *ngIf=\"!subtask.completed\">\n                {{ i+1 }} {{ subtask.name }}\n              </mat-panel-title>\n\n              <mat-panel-description>\n                  {{panelOpenState ? '' : subtask.description }}\n              </mat-panel-description>\n\n            </mat-expansion-panel-header>\n            <div>\n              <mat-slide-toggle style=\"margin-right: 40px;\" (change)=\"subtask.completed = $event.checked\">Check Task</mat-slide-toggle>\n              <mat-slide-toggle style=\"margin-right: 40px;\" (change)=\"subtask.setDescription = $event.checked\">Set Description</mat-slide-toggle>\n              <mat-slide-toggle style=\"margin-right: 40px;\" (change)=\"subtask.editTask = $event.checked\">Edit Task</mat-slide-toggle>\n              <mat-slide-toggle style=\"margin-right: 40px;\" (change)=\"subtask.isUrgent = $event.checked\">Urgent Task</mat-slide-toggle>\n              <button (click)=\"deleteTask(i)\" mat-button color=\"warn\" >X</button>\n            </div>\n            <br>\n            <mat-form-field *ngIf=\"subtask.setDescription\" class=\"example-form-field\">\n            <mat-label>Write Here To Set New Description</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"tmpStringInput\">\n            <button\n              *ngIf=\"tmpStringInput\" matSuffix mat-icon-button\n              aria-label=\"Clear\"\n              (click)=\"subtask.description = tmpStringInput; tmpStringInput=''; \"\n              >\n              <mat-icon>done</mat-icon>\n            </button>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"subtask.editTask\" class=\"example-form-field\">\n              <mat-label>Edit you task</mat-label>\n              <input matInput type=\"text\" [(ngModel)]=\"tmpStringInput\">\n              <button\n                *ngIf=\"tmpStringInput\" matSuffix mat-icon-button\n                aria-label=\"Clear\"\n                (click)=\"subtask.name = tmpStringInput; tmpStringInput=''; \"\n                >\n                <mat-icon>done</mat-icon>\n              </button>\n            </mat-form-field>\n\n\n            <hr>\n            <p>description Area: <br><br> <span style=\"color: cornflowerblue;\">{{ subtask.description }}</span></p>\n\n            </mat-expansion-panel>\n\n        </mat-accordion>\n      </div>\n      </li>\n\n    </ul>\n  </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\n\n\n\n\n\nimport { TaskListComponent } from './task-list.component'\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n\n@NgModule({\n  declarations: [\n    TaskListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRadioModule\n  ],\n\n  exports: [\n    TaskListComponent\n  ]\n})\n\nexport class TaskListModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n\nimport { TastEditorComponent } from './tast-editor.component'\nimport { MatInputModule } from '@angular/material/input';\n\n\n\n@NgModule({\n  declarations: [\n    TastEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    FormsModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    TastEditorComponent\n  ]\n})\n\nexport class TaskEditorModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { TaskserviceService } from './taskservice.service'\nimport { Task } from './shared/task'\nimport { User } from './shared/user';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NewUserDialogComponent } from './new-user-dialog/new-user-dialog.component';\nimport { ChangeUserDialogComponent } from './change-user-dialog/change-user-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'dailytodoTaskApp';\n  userList:User[] = []\n  taskList: Task[] = [];\n\n  constructor(\n    private taskService: TaskserviceService,\n    public dialog: MatDialog\n    ){}\n\n    ngOnInit(){\n      this.taskService.updatedTaskList.subscribe(taskList => this.taskList = taskList);\n      this.taskService.updatedUserList.subscribe(userList => this.userList = userList);\n      const tmpUserList = localStorage.getItem(\"userDatas\");\n      if(tmpUserList)  {\n        this.userList = JSON.parse(tmpUserList)\n        this.taskService.toUpdateUserList(this.userList);\n      }\n      const lastSelectedUser = localStorage.getItem(\"lastSelectedUser\");\n      let find: boolean = false;\n      if(tmpUserList)  {\n        this.userList = JSON.parse(tmpUserList)\n        this.taskService.toUpdateUserList(this.userList);\n      }\n      this.userList.forEach(user => {\n        if(user.email === lastSelectedUser){\n          this.taskService.toChengeUser(user);\n          this.taskService.toUpdateSelectedTask(user.userTasks[0]);\n          find = true;\n        }\n      })\n      if(!find){\n        alert( lastSelectedUser + ' Not Exists')\n      }\n\n    }\n\n    savePrograss(){\n      this.taskService.savePrograss();\n    }\n\n    createUser(){\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n\n      this.dialog.open(NewUserDialogComponent, dialogConfig);\n\n    }\n\n    changeUser(){\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n\n      this.dialog.open(ChangeUserDialogComponent, dialogConfig);\n\n    }\n\n\n}\n","<div class=\"main-buttons\">\r\n  <button (click)=\"savePrograss()\" mat-button color=\"warn\" style=\"display: flex;\">Save Progress</button>\r\n  <button (click)=\"savePrograss()\" mat-raised-button color=\"primary\" style=\"display: flex;\">Export Task List File</button>\r\n  <button (click)=\"changeUser()\" mat-raised-button color=\"accent\" style=\"display: flex;\">Change User</button>\r\n  <button mat-raised-button color=\"accent\" style=\"display: flex;\" (click)=\"createUser()\">Create New User</button>\r\n</div>\r\n\r\n\r\n<app-tast-editor></app-tast-editor>\r\n<app-task-list></app-task-list>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\n\nimport { TaskListModule } from './task-list/task-list.module'\nimport { TaskEditorModule } from './tast-editor/task-editor.module'\nimport { NewUserDialogModule } from './new-user-dialog/new-user-dialog.module';\nimport { ChangeUserDialogModule } from './change-user-dialog/change-user-dialog.module'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatSliderModule,\n    TaskListModule,\n    TaskEditorModule,\n    FormsModule,\n    NewUserDialogModule,\n    ChangeUserDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NewUserDialogComponent } from './new-user-dialog.component'\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NewUserDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule\r\n\r\n  ],\r\n  exports:[\r\n    NewUserDialogComponent\r\n  ]\r\n})\r\n\r\nexport class NewUserDialogModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChangeUserDialogComponent } from './change-user-dialog.component'\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChangeUserDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule\r\n\r\n  ],\r\n  exports:[\r\n    ChangeUserDialogComponent\r\n  ]\r\n})\r\n\r\nexport class ChangeUserDialogModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}